name: Build and Deploy Unity Game to Google Play

on:
  workflow_dispatch:
  repository_dispatch:
    types: [unity-build-trigger]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: |
            **/Library
            **/Temp
            **/Obj
            **/Logs
          key: ${{ runner.os }}-unity-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            ${{ runner.os }}-unity-

      - name: Decode keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "Keystore base64 length: ${#ANDROID_KEYSTORE_BASE64}"
            echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > ${{ vars.ANDROID_KEYSTORE_NAME }}
          else
            echo "Keystore base64 is empty!"
            exit 1
          fi
      
      - name: Build Android .aab
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: Android
          androidExportType: androidAppBundle
          unityVersion: ${{ vars.UNITY_VERSION }}
          androidKeystoreName: ${{ vars.ANDROID_KEYSTORE_NAME }}
          androidKeyaliasName: 'alias'
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasPass: ${{ secrets.ANDROID_ALIAS_PASS }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Upload Android AAB
        uses: actions/upload-artifact@v4
        with:
          name: Android-AAB
          path: build/Android/*.aab

      - name: Find AAB file
        id: find_aab
        run: |
          AAB_PATH=$(find build/Android -name "*.aab" | head -n 1)
          echo "AAB_PATH=$AAB_PATH" >> $GITHUB_ENV

      - name: Deploy to Google Play Internal Track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: ${{ vars.GP_PACKAGE_NAME }}
          releaseFile: ${{ env.AAB_PATH }}
          track: internal
          status: draft
